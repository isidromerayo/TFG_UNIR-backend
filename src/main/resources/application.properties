# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
#spring.datasource.url=jdbc:mariadb://localhost:3306/tfg_unir
# para docker con el comando: docker compose up
spring.datasource.url=jdbc:mariadb://app_db:3306/tfg_unir
spring.datasource.username=user_tfg
spring.datasource.password=tfg_un1r_PWD
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# load data from data.sql - should be preload production
#spring.jpa.defer-datasource-initialization=true
#spring.sql.init.mode=always
# Solve: ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)
spring.jackson.serialization.fail-on-empty-beans=false
##
# API
##
spring.data.rest.basePath=/api
##
# Spring security 
##
#spring.security.user.name=
#spring.security.user.password=